/* autogenerated by Processing revision 1293 on 2023-08-05 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import hype.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class HSprite_002 extends PApplet {



public void setup() {
	/* size commented out by preprocessor */;
	H.init(this).background(0xFFFF3300).use3D(true);

	// JPG textures

	H.add( new HSprite().texture("tex1.jpg") ).size(200).anchorAt(H.CENTER).loc((width/2)-210, height/3);
	H.add( new HSprite().texture("tex2.jpg") ).size(200).anchorAt(H.CENTER).loc((width/2), height/3);
	H.add( new HSprite().texture("tex3.jpg") ).size(200).anchorAt(H.CENTER).loc((width/2)+210, height/3);

	// PNG textures / being the ideal texture to map to HSprite / nothing but transparency love

	H.add( new HSprite().texture("tex1.png") ).size(200).anchorAt(H.CENTER).loc((width/2)-210, height/1.5f);
	H.add( new HSprite().texture("tex2.png") ).size(200).anchorAt(H.CENTER).loc((width/2), height/1.5f);
	H.add( new HSprite().texture("tex3.png") ).size(200).anchorAt(H.CENTER).loc((width/2)+210, height/1.5f);
}

public void draw() {
	H.drawStage();
}


  public void settings() { size(640, 640, P3D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "HSprite_002" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
